[{"/home/hafsa/webdesign/react.js/calculator/src/index.js":"1","/home/hafsa/webdesign/react.js/calculator/src/App.js":"2","/home/hafsa/webdesign/react.js/calculator/src/components/keyboard.js":"3","/home/hafsa/webdesign/react.js/calculator/src/components/calculator.js":"4"},{"size":199,"mtime":1609516751126,"results":"5","hashOfConfig":"6"},{"size":2469,"mtime":1609599758224,"results":"7","hashOfConfig":"6"},{"size":1955,"mtime":1609599689405,"results":"8","hashOfConfig":"6"},{"size":281,"mtime":1609600025719,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"16vqf5e",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/home/hafsa/webdesign/react.js/calculator/src/index.js",[],["20","21"],"/home/hafsa/webdesign/react.js/calculator/src/App.js",["22"],"import {useState} from 'react';\nimport Keyboard from \"./components/keyboard\";\nimport Calculator from \"./components/calculator\";\n\nimport './App.css'\nconst App = () => {\n  const [state, stateSetter] = useState({\n    result:'',\n    history:''\n  });\n\n  // listen for the keyboard changes\n  const handleChange = (button) =>{\n    const {history, result} = state;\n     const cName = button.className;\n     if(cName === 'number'){\n      stateSetter({\n         ...state, result:result+button.id\n       })\n     }\n     else if(cName === 'operator'){\n       if(result===''&&history==='')\n       return;\n       else if(result!== ''&&history === '')\n       stateSetter({\n         ...state,\n         history:result+button.id,\n         result:''\n       })\n       else if(result===''&&!Number(history.charAt(history.length-1)))\n        stateSetter({\n          ...state, history:history.replace(/.$/,button.id)\n        })\n        else {\n          stateSetter({\n            ...state, history:history+result+button.id,\n            result:''\n          })\n        }\n     }\n      else if(cName === 'calculate')\n      calculate()\n      else if(cName === 'backspace')  \n        backspace()\n      else if(cName === 'clear')\n      clear();\n     else if(cName==='minus-symbol')\n     Minus()\n     else if(cName === 'dot'){\n       if(!(result.toString()).includes('.'))\n       stateSetter({\n         ...state, result:result+'.'\n       })\n     }\n\n    }\n    // clear the state (initialize it again)\n      const clear = () =>{\n        stateSetter({\n          history:'',\n          result:'',\n        })\n      }\n\n      // backspace (remove the last number of the result number)\n      const backspace = () =>{\n        const {result} = state;\n        stateSetter({\n          ...state, result:result.replace(/.$/,\"\")\n        })\n      }\n\n      // toggle minus symbol\n      const Minus = () =>{\n        stateSetter({\n          ...state, result:state.result*-1\n        })\n      }\n\n      // make the caculation\n        const calculate = () =>{\n          const {result, history} = state;\n          if(!Number(history.charAt(history.length-1))&&result==='')\n          return;\n          stateSetter({\n            ...state, result:eval(history+result),\n            history:''\n          })\n         }\n\n  return ( \n    <div className = \"app\">\n    <Calculator result = {state.result} \n      history = {state.history} />\n    <Keyboard \n    handleChange = {handleChange} \n    />\n    </div>\n   );\n}\n \nexport default App;","/home/hafsa/webdesign/react.js/calculator/src/components/keyboard.js",[],"/home/hafsa/webdesign/react.js/calculator/src/components/calculator.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":86,"column":30,"nodeType":"29","messageId":"30","endLine":86,"endColumn":34},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]